@using Timo.Dialogs
@inherits MudComponentBase
@inject IDialogService DialogService

<MudGrid Justify="Justify.SpaceBetween" Spacing="24">
    <MudItem xs="2" Class="my-auto">
        <MudText
            Width="100%"
            Height="100%"
            Class="px-auto"
            Style="font-size: 100px">
            @Count
        </MudText>
    </MudItem>
    <MudItem xs="2" Class="my-auto">
        <MudGrid>
            <MudItem xs="12">
                <MudIconButton Color="Color.Primary"
                               Class="pa-3 rounded-pill"
                               OnClick="OpenEditDialog"
                               Variant="Variant.Filled"
                               Icon="@Icons.Material.Filled.Edit"
                               Size="Size.Small"
                               aria-label="add"/>
            </MudItem>
        </MudGrid>
    </MudItem>
    <MudItem xs="12">
        <MudText>@Name</MudText>
    </MudItem>
</MudGrid>

@code {

    [Parameter]
    public int Count { get; set; } = 0;
    
    [Parameter]
    public EventCallback<int> CountChanged { get; set; }

    [Parameter]
    public string Name { get; set; } = "";

    private async Task OpenEditDialog()
    {
        var parameters = new DialogParameters {{nameof(EditCountDialog.Value), Count}};
        var dialog = DialogService.Show<EditCountDialog>("Edit Count", parameters);
        var result = await dialog.Result;
        if (!result.Cancelled)
        {
            Count = (int) result.Data;
            await CountChanged.InvokeAsync(Count);
        }
    }

}