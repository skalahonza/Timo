@inherits MudComponentBase

<MudText
    Width="100%"
    Height="100%"
    Class="my-auto"
    Color="@(RemainingTime > TimeSpan.Zero ? Color.Success : Color.Error)"
    Style="font-size: 35px">
    @RemainingTimeText
</MudText>

<MudText>@Name</MudText>


@code {

    public enum CountDownPrecision
    {
        Days,
        Hours,
        Minutes,
        Seconds
    }

    private Timer? _timer;
    public DateTime StartTime { get; set; } = DateTime.Now.AddDays(3);
    public CountDownPrecision Precision { get; set; } = CountDownPrecision.Seconds;
    public TimeSpan RemainingTime => StartTime - DateTime.Now;
    
    [Parameter]
    public string Name { get; set; } = "";

    public string RemainingTimeText
    {
        get
        {
            var names = new[] {"D", "H", "M", "S"};
            var lastName = names[(int) Precision];
            var values = new[] {RemainingTime.Days, RemainingTime.Hours, RemainingTime.Minutes, RemainingTime.Seconds};
            return string.Join(' ', names
                .Zip(values, (name, value) => (name,value))
                .Take((int) Precision + 1)
                .Where(x => x.value > 0 || x.name == lastName)
                .Select(x => $"{x.value}{x.name}"));
        }
    }

    protected override void OnInitialized()
    {
        _timer = new Timer(_ => { StateHasChanged(); }, null, 0, 1000);
    }
}