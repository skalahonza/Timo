@page "/"

<PageTitle>Timo | Dashboard</PageTitle>


<MudGrid Justify="Justify.Center">
    <MudItem xs="12">
        <MudText Align="Align.Center" Typo="Typo.subtitle1">Timo | The only dashboard you need</MudText>
    </MudItem>

    <MudItem xs="12" sm="6" md="4">
        <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;">
            <Counter @ref="_cannulaCounter" InitialCount="3" Name="Remains"/>
        </MudPaper>
    </MudItem>

    <MudItem xs="12" sm="6" md="4">
        <MudGrid>
            <MudItem xs="12">
                <MudPaper Elevation="2" Class="pa-4">
                    <CountDown @ref="_cannulaCountDown" Name="Cannula age"/>
                </MudPaper>
            </MudItem>
            <MudItem xs="12">
                <MudButton
                    OnClick="@NewCannulaClicked"
                    Variant="Variant.Filled"
                    Color="Color.Primary"
                    Size="Size.Large"
                    Class="rounded-pill"
                    FullWidth="true">
                    New Cannula
                </MudButton>
            </MudItem>
        </MudGrid>
    </MudItem>
</MudGrid>

@code {
    [Inject]
    private IDialogService DialogService { get; set; } = null!;

    private Counter _cannulaCounter = new();
    private CountDown _cannulaCountDown = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    public async Task NewCannulaClicked()
    {
        var result = await DialogService.ShowMessageBox(
            "New cannula",
            "Confirm that new cannula is inserted",
            yesText: "Confirm", cancelText: "Cancel");

        if (result == true)
        {
            _cannulaCountDown.Reset();
            _cannulaCounter.DecrementCount();
            StateHasChanged();
        }
    }

}